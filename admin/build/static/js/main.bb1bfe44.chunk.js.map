{"version":3,"sources":["apiUrl.js","pages/Login.js","pages/AddArticle.js","pages/ArticleList.js","pages/AdminIndex.js","pages/Main.js","App.js","serviceWorker.js","index.js"],"names":["ipUrl","console","log","process","servicePath","getTypeInfo","addArticle","updateArticle","checkLogin","getArticleList","delArticle","getArticleById","Login","props","useState","userName","setUserName","password","setPassword","isLoading","setIsLoading","className","tip","spinning","title","bordered","style","width","id","size","placeholder","prefix","type","color","onChange","e","target","value","Password","md5","block","onClick","message","error","dataProps","axios","method","url","data","withCredentials","then","res","localStorage","setItem","openId","history","push","setTimeout","Option","Select","TextArea","Input","AddArticle","articleId","setArticleId","articleTitle","setArticleTitle","articleContent","setArticleContent","markdownContent","setMarkdownContent","introducemd","setIntroducemd","introducehtml","setIntroducehtml","showDate","setShowDate","typeInfo","setTypeInfo","selectedType","setSelectType","renderer","marked","Renderer","useEffect","tmpId","match","params","setOptions","gfm","pedantic","sanitize","tables","breaks","smartLists","smartypants","changeContent","html","changeIntroduce","removeItem","header","article_content","introduce","tmpInt","addTime","typeId","gutter","span","defaultValue","map","item","index","key","typeName","rows","onPressEnter","dangerouslySetInnerHTML","__html","type_id","dateText","replace","Date","getTime","view_count","Math","ceil","random","insertId","isSuccess","success","date","dateString","confirm","Modal","ArticleList","list","setList","getList","dataSource","renderItem","Item","part_count","content","onOk","onCancel","Header","Layout","Content","Footer","Sider","SubMenu","Menu","AdminIndex","collapsed","setCollapsed","minHeight","collapsible","onCollapse","theme","defaultSelectedKeys","mode","background","padding","margin","path","exact","component","textAlign","Main","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bb1bfe44.chunk.js","sourcesContent":["let ipUrl\nconsole.log('env:', process.env.NODE_ENV)\nif(process.env.NODE_ENV === 'development') {\n  ipUrl = 'http://127.0.0.1:7001/default/' \n} else {\n  ipUrl = 'http://182.61.147.53:7001/default/' \n}\nconst servicePath = {\n  getTypeInfo:ipUrl + 'getTypeInfo' ,  //  获得文章类别信息\n  addArticle:ipUrl + 'addArticle' ,  //  添加文章\n  updateArticle:ipUrl + 'updateArticle' ,  //  修改文章第api地址\n  checkLogin:ipUrl + 'checkLogin' ,  //  检查用户名密码是否正确\n  getArticleList:ipUrl + 'getArticleList' ,  //  文章列表 \n  delArticle:ipUrl + 'delArticle/' ,  //  删除文章\n  getArticleById:ipUrl + 'getArticleById/' ,  //  根据ID获得文章详情\n}\n\nexport default servicePath;\n","import React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport { Card, Input, Icon, Button, Spin, message } from 'antd';\nimport md5 from 'md5';\nimport axios from 'axios';\nimport servicePath from '../apiUrl';\nimport './styles/login.css';\n\nfunction Login(props) {\n  const [userName, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const checkLogin = () => {\n    setIsLoading(true);\n    if (!userName) {\n      message.error('用户名不能为空');\n      return false;\n    } else if (!password) {\n      message.error('密码不能为空');\n      return false;\n    }\n    let dataProps = {\n      userName,\n      password,\n    };\n    axios({\n      method: 'post',\n      url: servicePath.checkLogin,\n      data: dataProps,\n      withCredentials: true,\n    }).then((res) => {\n      setIsLoading(false);\n      if (res.data.data == '登录成功') {\n        localStorage.setItem('openId', res.data.openId);\n        props.history.push('/index');\n      } else {\n        message.error('用户名密码错误');\n      }\n    });\n\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 1000);\n  };\n  return (\n    <div className='login-div'>\n      <Spin tip='Loading...' spinning={isLoading}>\n        <Card\n          title=\"Rick's Blog\"\n          bordered={true}\n          style={{ width: 400 }}\n        >\n          <Input\n            id='userName'\n            size='large'\n            placeholder='Enter your userName'\n            prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n            onChange={(e) => {\n              setUserName(e.target.value);\n            }}\n          />\n          <br />\n          <br />\n          <Input.Password\n            id='password'\n            size='large'\n            placeholder='Enter your password'\n            prefix={<Icon type='key' style={{ color: 'rgba(0,0,0,.25)' }} />}\n            onChange={(e) => {\n              setPassword(md5(e.target.value));\n            }}\n          />\n          <br />\n          <br />\n          <Button type='primary' size='large' block onClick={checkLogin}>\n            {' '}\n            Login in{' '}\n          </Button>\n        </Card>\n      </Spin>\n    </div>\n  );\n}\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport marked from 'marked';\nimport axios from 'axios';\nimport {\n  Row,\n  Col,\n  Input,\n  Select,\n  Button,\n  DatePicker,\n  message,\n  Spin,\n} from 'antd';\n\nimport servicePath from '../apiUrl.js';\nimport './styles/addArticle.css';\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nfunction AddArticle(props) {\n  const [articleId, setArticleId] = useState(0); // 文章的ID，如果是0说明是新增加，如果不是0，说明是修改\n  const [articleTitle, setArticleTitle] = useState(''); //文章标题\n  const [articleContent, setArticleContent] = useState(''); //markdown的编辑内容\n  const [markdownContent, setMarkdownContent] = useState('预览内容'); //html内容\n  const [introducemd, setIntroducemd] = useState(); //简介的markdown内容\n  const [introducehtml, setIntroducehtml] = useState('等待编辑'); //简介的html内容\n  const [showDate, setShowDate] = useState(); //发布日期\n  const [updateDate, setUpdateDate] = useState(); //修改日志的日期\n  const [typeInfo, setTypeInfo] = useState([]); // 文章类别信息\n  const [selectedType, setSelectType] = useState(1); //选择的文章类别\n  const [isLoading, setIsLoading] = useState(true);\n  const renderer = new marked.Renderer();\n\n  useEffect(() => {\n    getTypeInfo();\n    //获得文章ID\n    let tmpId = props.match.params.id;\n    console.log('tmpId', tmpId)\n    if (tmpId) {\n      setArticleId(tmpId);\n      getArticleById(tmpId);\n    }\n  }, []);\n\n  marked.setOptions({\n    renderer: renderer,\n    gfm: true,\n    pedantic: false,\n    sanitize: false,\n    tables: true,\n    breaks: false,\n    smartLists: true,\n    smartypants: false,\n  });\n  const changeContent = (e) => {\n    setArticleContent(e.target.value);\n    let html = marked(e.target.value);\n    setMarkdownContent(html);\n  };\n\n  const changeIntroduce = (e) => {\n    setIntroducemd(e.target.value);\n    let html = marked(e.target.value);\n    setIntroducehtml(html);\n  };\n\n  //从中台得到文章类别信息\n  const getTypeInfo = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getTypeInfo,\n      withCredentials: true,\n    }).then((res) => {\n      if (res.data.data == '没有登录') {\n        localStorage.removeItem('openId');\n        props.history.push('/');\n      } else {\n        setIsLoading(false);\n        setTypeInfo(res.data.data);\n      }\n    });\n  };\n\n  //选择类别后的便哈\n  const selectTypeHandler = (value) => {\n    console.log('value', value);\n    setSelectType(value);\n  };\n\n  const saveArticle = () => {\n    if (!selectedType) {\n      message.error('必须选择文章类别');\n      return false;\n    } else if (!articleTitle) {\n      message.error('文章名称不能为空');\n      return false;\n    } else if (!articleContent) {\n      message.error('文章内容不能为空');\n      return false;\n    } else if (!introducemd) {\n      message.error('简介不能为空');\n      return false;\n    } else if (!showDate) {\n      message.error('发布日期不能为空');\n      return false;\n    }\n    let dataProps = {}; //传递到接口的参数\n    dataProps.type_id = selectedType;\n    dataProps.title = articleTitle;\n    dataProps.article_content = articleContent;\n    dataProps.introduce = introducemd;\n    let dateText = showDate.replace('-', '/'); //把字符串转换成时间戳\n    dataProps.addTime = new Date(dateText).getTime() / 1000;\n\n    if (articleId == 0) {\n      console.log('articleId=:' + articleId);\n      dataProps.view_count = Math.ceil(Math.random() * 100) + 1000;\n      axios({\n        method: 'post',\n        url: servicePath.addArticle,\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        setArticleId(res.data.insertId);\n        if (res.data.isSuccess) {\n          message.success('文章保存成功');\n        } else {\n          message.error('文章保存失败');\n        }\n      });\n    } else {\n      dataProps.id = articleId;\n      axios({\n        method: 'post',\n        url: servicePath.updateArticle,\n        header: { 'Access-Control-Allow-Origin': '*' },\n        data: dataProps,\n        withCredentials: true,\n      }).then((res) => {\n        if (res.data.isSuccess) {\n          message.success('文章保存成功');\n        } else {\n          message.error('保存失败');\n        }\n      });\n    }\n  };\n\n  const getArticleById = (id) => {\n    axios(servicePath.getArticleById + id, {\n      withCredentials: true,\n      header: { 'Access-Control-Allow-Origin': '*' },\n    }).then((res) => {\n      //let articleInfo= res.data.data[0]\n      setArticleTitle(res.data.data[0].title);\n      setArticleContent(res.data.data[0].article_content);\n      let html = marked(res.data.data[0].article_content);\n      setMarkdownContent(html);\n      setIntroducemd(res.data.data[0].introduce);\n      let tmpInt = marked(res.data.data[0].introduce);\n      setIntroducehtml(tmpInt);\n      setShowDate(res.data.data[0].addTime);\n      setSelectType(res.data.data[0].typeId);\n    });\n  };\n\n  return (\n    <div>\n      <Spin spinning={isLoading}>\n        <Row gutter={5}>\n          <Col span={18}>\n            <Row gutter={10}>\n              <Col span={16}>\n                <Input\n                  value={articleTitle}\n                  placeholder='博客标题'\n                  onChange={(e) => {\n                    setArticleTitle(e.target.value);\n                  }}\n                  size='large'\n                />\n              </Col>\n              <Col span={4}>\n                &nbsp;\n                <Select\n                  defaultValue={selectedType}\n                  size='large'\n                  onChange={selectTypeHandler}\n                >\n                  {typeInfo.map((item, index) => {\n                    return (\n                      <Option key={index} value={item.id}>\n                        {item.typeName}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Col>\n            </Row>\n            <br />\n            <Row gutter={10}>\n              <Col span={12}>\n                <TextArea\n                  value={articleContent}\n                  className='markdown-content'\n                  rows={35}\n                  onChange={changeContent}\n                  onPressEnter={changeContent}\n                  placeholder='文章内容'\n                />\n              </Col>\n              <Col span={12}>\n                <div\n                  className='show-html'\n                  dangerouslySetInnerHTML={{ __html: markdownContent }}\n                ></div>\n              </Col>\n            </Row>\n          </Col>\n\n          <Col span={6}>\n            <Row>\n              <Col span={24}>\n                <Button size='large'>暂存文章</Button>&nbsp;&nbsp;\n                <Button type='primary' size='large' onClick={saveArticle}>\n                  发布文章\n                </Button>\n                <br />\n              </Col>\n              <Col span={24}>\n                <TextArea\n                  rows={4}\n                  value={introducemd}\n                  onChange={changeIntroduce}\n                  onPressEnter={changeIntroduce}\n                  placeholder='文章简介'\n                />\n                <div\n                  className='introduce-html'\n                  dangerouslySetInnerHTML={{\n                    __html: '文章简介：' + introducehtml,\n                  }}\n                ></div>\n              </Col>\n\n              <Col span={12}>\n                <div className='date-select'>\n                  <DatePicker\n                    onChange={(date, dateString) => setShowDate(dateString)}\n                    placeholder='发布日期'\n                    size='large'\n                  />\n                </div>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Spin>\n    </div>\n  );\n}\nexport default AddArticle;\n","import React, { useState, useEffect } from 'react';\nimport './styles/articleList.css';\nimport { List, Row, Col, Modal, message, Button, Switch } from 'antd';\nimport axios from 'axios';\nimport servicePath from '../apiUrl';\nconst { confirm } = Modal;\n\nfunction ArticleList(props) {\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    getList();\n  }, []);\n\n  //得到文章列表\n  const getList = () => {\n    axios({\n      method: 'get',\n      url: servicePath.getArticleList,\n      withCredentials: true,\n      header: { 'Access-Control-Allow-Origin': '*' },\n    }).then((res) => {\n      setList(res.data.list);\n    });\n  };\n\n  //删除文章的方法\n  const delArticle = (id) => {\n    confirm({\n      title: '确定要删除这篇博客文章吗?',\n      content: '如果你点击OK按钮，文章将会永远被删除，无法恢复。',\n      onOk() {\n        axios(servicePath.delArticle + id, { withCredentials: true }).then(\n          (res) => {\n            message.success('文章删除成功');\n            getList();\n          }\n        );\n      },\n      onCancel() {\n        message.success('没有任何改变');\n      },\n    });\n  };\n\n  //修改文章\n  const updateArticle = (id, checked) => {\n    props.history.push('/index/add/' + id);\n  };\n\n  return (\n    <div>\n      <List\n        header={\n          <Row className='list-div'>\n            <Col span={8}>\n              <b>标题</b>\n            </Col>\n            <Col span={3}>\n              <b>类别</b>\n            </Col>\n            <Col span={3}>\n              <b>发布时间</b>\n            </Col>\n            <Col span={3}>\n              <b>集数</b>\n            </Col>\n            <Col span={3}>\n              <b>浏览量</b>\n            </Col>\n\n            <Col span={4}>\n              <b>操作</b>\n            </Col>\n          </Row>\n        }\n        bordered\n        dataSource={list}\n        renderItem={(item) => (\n          <List.Item>\n            <Row className='list-div'>\n              <Col span={8}>{item.title}</Col>\n              <Col span={3}>{item.typeName}</Col>\n              <Col span={3}>{item.addTime}</Col>\n              <Col span={3}>\n                共<span>{item.part_count}</span>集\n              </Col>\n              <Col span={3}>{item.view_count}</Col>\n\n              <Col span={4}>\n                <Button type='primary' onClick={() => updateArticle(item.id)}>修改</Button>&nbsp;\n                <Button\n                  onClick={() => {\n                    delArticle(item.id);\n                  }}\n                >\n                  删除{' '}\n                </Button>\n              </Col>\n            </Row>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default ArticleList;\n","import React, { useState } from 'react';\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd';\nimport { Route } from 'react-router-dom';\nimport AddArticle from './AddArticle';\nimport ArticleList from './ArticleList';\nimport './styles/adminIndex.css';\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction AdminIndex(props) {\n  const [collapsed, setCollapsed] = useState(false);\n\n  const onCollapse = (collapsed) => {\n    setCollapsed(collapsed);\n  };\n\n  const handleClickArticle = (e) => {\n    console.log(e.item.props);\n    if (e.key == 'addArticle') {\n      props.history.push('/index/add');\n    } else {\n      props.history.push('/index/list');\n    }\n  };\n  return (\n    <Layout style={{ minHeight: '100vh' }}>\n      <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n        <div className='logo' />\n        <Menu theme='dark' defaultSelectedKeys={['1']} mode='inline'>\n          <Menu.Item key='1'>\n            <Icon type='pie-chart' />\n            <span>工作台</span>\n          </Menu.Item>\n          <Menu.Item key='2'>\n            <Icon type='desktop' />\n            <span>添加文章</span>\n          </Menu.Item>\n          <SubMenu\n            key='sub1'\n            onClick={handleClickArticle}\n            title={\n              <span>\n                <Icon type='desktop' />\n                <span>文章管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key='addArticle'>添加文章</Menu.Item>\n            <Menu.Item key='articleList'>文章列表</Menu.Item>\n          </SubMenu>\n          <Menu.Item key='9'>\n            <Icon type='file' />\n            <span>留言管理</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }} />\n        <Content style={{ margin: '0 16px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>后台管理</Breadcrumb.Item>\n            <Breadcrumb.Item>工作台</Breadcrumb.Item>\n          </Breadcrumb>\n          <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n            <div style={{ padding: 24, background: '#fff', minHeight: 360 }}>\n              <div>\n                <div>\n                  <Route path='/index/' exact component={AddArticle} />\n                  <Route path='/index/add/' exact component={AddArticle} />\n                  <Route path='/index/add/:id' exact component={AddArticle} />\n                  <Route path='/index/list/' component={ArticleList} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </Content>\n        <Footer style={{ textAlign: 'center' }}>Rick's Blog</Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default AdminIndex;\n","\nimport React from 'react';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Login from './Login'\nimport AdminIndex from './AdminIndex'\nfunction Main(){\n    return (\n        <Router>      \n            <Route path=\"/\" exact component={Login} />\n            <Route path=\"/index/\" component={AdminIndex} />\n        </Router>\n    )\n}\nexport default Main\n","import React from 'react';\nimport Main from './pages/Main'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main /> \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}